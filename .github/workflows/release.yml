name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  actions: read
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        id: version
        run: |
          VERSION_TYPE="${{ github.event.inputs.version_type }}"
          NEW_VERSION=$(npm version $VERSION_TYPE --no-git-tag-version)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "version_number=${NEW_VERSION#v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        run: |
          npm run changelog:generate
          git add CHANGELOG.md

      - name: Update Helm chart version
        run: |
          sed -i 's/^version:.*/version: ${{ steps.version.outputs.version_number }}/' helm/Chart.yaml
          sed -i 's/^appVersion:.*/appVersion: "${{ steps.version.outputs.version_number }}"/' helm/Chart.yaml

      - name: Commit version bump
        run: |
          git add package.json package-lock.json helm/Chart.yaml CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }} [skip ci]"
          git tag ${{ steps.version.outputs.new_version }}

      - name: Push changes
        run: |
          git push origin main
          git push origin ${{ steps.version.outputs.new_version }}
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Build Docker image
        run: |
          docker build -t harz-storage:${{ steps.version.outputs.version_number }} .
          docker tag harz-storage:${{ steps.version.outputs.version_number }} harz-storage:latest

      - name: Create GitHub Release
        run: |
          CHANGELOG=""
          if [ -f CHANGELOG.md ]; then
            CHANGELOG=$(sed -n "/## \[${{ steps.version.outputs.version_number }}\]/,/## \[/p" CHANGELOG.md | head -n -1 | tail -n +2)
          else
            CHANGELOG="Release ${{ steps.version.outputs.new_version }}"
          fi
          
          gh release create ${{ steps.version.outputs.new_version }} \
            --title "Release ${{ steps.version.outputs.new_version }}" \
            --notes "## Changes
          $CHANGELOG

          ## Docker Image
          \`\`\`bash
          docker pull harz-storage:${{ steps.version.outputs.version_number }}
          \`\`\`

          ## Helm Deployment
          \`\`\`bash
          helm upgrade --install harz-storage ./helm --set image.tag=${{ steps.version.outputs.version_number }}
          \`\`\`"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
